name: CI for Todo List Backend

# 워크플로우가 실행될 조건 (Triggers)
on:
    push:
        branches: ["main"]
        paths:
            - "apps/todo-list/backend/**"

# 실행될 작업(Job)들
jobs:
    build-and-push:
        runs-on: ubuntu-latest
        steps:
            # 1. 소스 코드 체크아웃
            - name: Checkout source code
              uses: actions/checkout@v4

            # 2. JDK 17 설정
            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: "17"
                  distribution: "temurin"

            # 3. Gradle 캐싱
            - name: Gradle Caching
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-

            # 4. gradlew에 실행 권한 부여
            - name: Grant execute permission for gradlew
              run: chmod +x gradlew
              working-directory: ./apps/todo-list/backend

            # 5. Gradle로 프로젝트 빌드
            - name: Build with Gradle
              run: ./gradlew build -x test
              working-directory: ./apps/todo-list/backend

            # 6. Docker Hub에 로그인
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            # 7-1. 7자리 SHA를 환경변수로 저장
            - name: Export short SHA
              id: vars
              run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

            # 7-2. Docker 이미지 빌드 및 푸시
            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: ./apps/todo-list/backend
                  file: ./apps/todo-list/backend/Dockerfile.prod
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/k8s-labs-todo-backend:${{ steps.vars.outputs.SHORT_SHA }}

            # 8. 생성된 이미지 태그 출력
            - name: Print image tag
              run: echo "Image tagged with:${{ secrets.DOCKERHUB_USERNAME }}/k8s-labs-todo-backend:${{ github.sha }}"

            # 9. 매니페스트 저장소 체크아웃
            - name: Checkout manifests repository
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.ACTION_PAT }}
                  repository: ${{ github.repository_owner }}/k8s-labs-todo-list-manifests
                  path: manifests

            # 10. YAML 수정 도구(yq) 설치
            - name: Install yq
              run: |
                  sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
                  sudo chmod +x /usr/bin/yq

            # 11. Helm 배포 지시서의 이미지 태그 업데이트
            - name: Update image tag in ArgoCD Application manifest
              run: |
                  # 1) 태그 생성
                  NEW_TAG=${GITHUB_SHA:0:7}
                  echo "Updating image tag to: $NEW_TAG"

                  # 2) 매니페스트 존재 확인
                  if [ ! -f manifests/todo-list-application.yaml ]; then
                    echo "Error: Manifest file not found"
                    exit 1
                  fi

                  # 3) image.tag 파라미터 업데이트 (직접 치환 방식)
                  yq e "(.spec.source.helm.parameters[] | select(.name == \"backend.image.tag\") | .value) = \"$NEW_TAG\"" \
                    -i manifests/todo-list-application.yaml

                  # 4) 결과 확인
                  echo "Updated manifest:"
                  yq e '.spec.source.helm.parameters[] | select(.name == "backend.image.tag")' \
                    manifests/todo-list-application.yaml

            # 12. 변경 사항 커밋 및 푸시
            - name: Commit and push changes
              run: |
                  cd manifests
                  git config --global user.name "github-actions[bot]"
                  git config --global user.email "github-actions[bot]@users.noreply.github.com"
                  git add .
                  if git diff --staged --quiet; then
                    echo "No changes to commit"
                  else
                    git commit -m "ci(backend): Update image tag to ${GITHUB_SHA:0:7}"
                    git push
                  fi
